<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;

use App\ListingType;
use App\Location;
use App\Scopes\WebVisibleScope;

class Listing extends Model
{

  /**
   * Fillable fields for a new manufacturer.
   *
   * @var array
   */
  protected $guarded = ['id'];

  /**
   * The booting method of the model.
   *
   * @return void
   */
  protected static function boot()
  {
    parent::boot();

    static::addGlobalScope(new WebVisibleScope);
  }

  /**
   * Get the property description.
   *
   * @return void
   */
  public function getDescriptionAttribute($value) {
    return ($value) ? $value : '<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>';
  }

  /**
   * Get thumbnail associated with the listing
   *
   * @return string
   */
  public function getImagesAttribute($value)
  {
      return ($value != '') ? json_decode($value, true) : '';
  }

  /**
   * Get image url.
   *
   * @return void
   */
  public function getImageAttribute($value) {
      if ($this->getImage(0) == '') return;

      return (Storage::disk('uploads')->exists($this->getImage(0)) === true) ? Storage::disk('uploads')->url($this->getImage(0)) : '';

      // return $this->getImage(0);
      // return (count($this->images) > 0) ? $this->images[0] : '';
    // if ($value && Storage::disk('dev')->exists('images/properties/' . $value) === true) {
    //   return asset('images/properties' . $value);
    // } else {
    //   return asset('images/properties/demo-property.jpg');
    // }
  }

  /**
   * Get URL associated with the property.
   *
   * @return void
   */
  public function getUrlAttribute() {
    return '/property-details/' . $this->id . '/' . $this->slug;
  }

  /**
   * Get location and category associated with the property.
   *
   * @return mixed App\ListingType, App\Location
   */
  public function scopeWithLocationAndListingType($query) {
    return $query->with('location', 'category')->get();
  }

  /**
   * Get featured properties.
   *
   * @return App\Listing
   */
  public function scopeFeatured($query, $take = 10) {
    return $query
    ->where('featured', 1)
    ->inRandomOrder()
    ->with('location', 'category')
    ->take($take)
    ->get();
  }

  /**
   * Sorting results.
   *
   * @return App\Listing
   */
  public function scopeSortBy($query, $order_by, $sort_by) {
    return $query->orderBy($order_by, $sort_by);
  }

  /**
   * Get properties associated by location.
   *
   * @return App\Listing
   */
  public function scopeByLocation($query, $location, $web_visible = 1) {
    $location = Location::where('slug', $location)->pluck('id')->first();

    return $query
    ->where('location_id', $location)
    ->where('web_visible', $web_visible)
    ->SortBy('id', 'DESC')
    ->with('location', 'category')
    ->paginate(15);
  }

  /**
   * Get properties for sale.
   *
   * @return void
   */
  public function scopeForSale($query, $location, $web_visible = 1) {
    $location = Location::where('slug', $location)->pluck('id')->first();

    return $query
    ->where('location_id', $location)
    ->where('web_visible', $web_visible)
    ->where('for_sale', 1)
    ->SortBy('id', 'DESC')
    ->with('location', 'category')
    ->paginate(15);
  }

  /**
   * Get properties for rent.
   *
   * @return void
   */
  public function scopeForRent($query, $location, $web_visible = 1) {
    $location = Location::where('slug', $location)->pluck('id')->first();

    return $query
    ->where('location_id', $location)
    ->where('web_visible', $web_visible)
    ->where('for_rent', 1)
    ->SortBy('id', 'DESC')
    ->with('location', 'category')
    ->paginate(15);
  }

  /**
   * Get location associated with the property.
   *
   * @return App\Location
   */
  public function location() {
    return $this->belongsTo(Location::class);
  }

  /**
   * Get category associated with the property.
   *
   * @return App\ListingType
   */
  public function category() {
    return $this->belongsTo(ListingType::class);
  }

  /**
   * Get visible properties.
   *
   * @return void
   */
  public function scopeVisible($query) {
    return $query
    ->where('web_visible', 1)
    ->SortBy('id', 'DESC')
    ->with('location', 'category')
    ->paginate(15);
  }

  /**
   * Get images associated wtih the property.
   *
   * @return void
   */
  public function getImages() {
    return ($this->images) ? $this->images : '';
  }

  /**
   * Get image associated wtih the property.
   *
   * @param int index Index of an array
   * @return void
   */
  public function getImage($index) {
    return (isset($this->images[$index])) ? $this->images[$index] : '';
  }
}
